{"planner_output": "INFO     planner time limit: None\nINFO     planner memory limit: None\n\nINFO     Running translator.\nINFO     translator stdin: None\nINFO     translator time limit: None\nINFO     translator memory limit: None\nINFO     translator command line string: /home/james/repos/nl2pddl3/.venv/bin/python /home/james/repos/nl2pddl3/.venv/lib/python3.10/site-packages/forbiditerative/builds/release/bin/translate/translate.py /home/james/repos/nl2pddl3/data/domains/blocks/ground.pddl /home/james/repos/nl2pddl3/data/gen_problems/testing/blocks/problem-1.pddl --sas-file output.sas\nParsing...\nParsing: [0.000s CPU, 0.002s wall-clock]\nNormalizing task... [0.000s CPU, 0.000s wall-clock]\nInstantiating...\nGenerating Datalog program... [0.000s CPU, 0.000s wall-clock]\nNormalizing Datalog program...\nNormalizing Datalog program: [0.000s CPU, 0.001s wall-clock]\nPreparing model... [0.000s CPU, 0.000s wall-clock]\nGenerated 21 rules.\nComputing model... [0.000s CPU, 0.000s wall-clock]\n30 relevant atoms\n18 auxiliary atoms\n48 final queue length\n70 total queue pushes\nCompleting instantiation... [0.000s CPU, 0.000s wall-clock]\nInstantiating: [0.000s CPU, 0.001s wall-clock]\nComputing fact groups...\nFinding invariants...\n10 initial candidates\nFinding invariants: [0.010s CPU, 0.001s wall-clock]\nChecking invariant weight... [0.000s CPU, 0.000s wall-clock]\nInstantiating groups... [0.000s CPU, 0.000s wall-clock]\nCollecting mutex groups... [0.000s CPU, 0.000s wall-clock]\nChoosing groups...\n3 uncovered facts\nChoosing groups: [0.000s CPU, 0.000s wall-clock]\nBuilding translation key... [0.000s CPU, 0.000s wall-clock]\nComputing fact groups: [0.010s CPU, 0.002s wall-clock]\nBuilding STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]\nBuilding dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]\nBuilding mutex information...\nBuilding mutex information: [0.000s CPU, 0.000s wall-clock]\nTranslating task...\nProcessing axioms...\nSimplifying axioms... [0.000s CPU, 0.000s wall-clock]\nTranslator axioms removed by simplifying: 0\nComputing negative axioms... [0.000s CPU, 0.000s wall-clock]\nProcessing axioms: [0.000s CPU, 0.000s wall-clock]\nTranslating task: [0.000s CPU, 0.000s wall-clock]\n10 effect conditions simplified\n0 implied preconditions added\nDetecting unreachable propositions...\n0 operators removed\n0 axioms removed\n4 propositions removed\nDetecting unreachable propositions: [0.000s CPU, 0.000s wall-clock]\nReordering and filtering variables...\n5 of 5 variables necessary.\n3 of 5 mutex groups necessary.\n8 of 8 operators necessary.\n0 of 0 axiom rules necessary.\nReordering and filtering variables: [0.000s CPU, 0.000s wall-clock]\nTranslator variables: 5\nTranslator derived variables: 0\nTranslator facts: 12\nTranslator goal facts: 2\nTranslator mutex groups: 3\nTranslator total mutex groups size: 9\nTranslator operators: 8\nTranslator axioms: 0\nTranslator task size: 82\nTranslator peak memory: 28748 KB\nWriting output... [0.000s CPU, 0.000s wall-clock]\nDone! [0.010s CPU, 0.006s wall-clock]\ntranslate exit code: 0\n\nINFO     Running search (/home/james/repos/nl2pddl3/.venv/lib/python3.10/site-packages/forbiditerative/builds/release/bin).\nINFO     search stdin: output.sas\nINFO     search time limit: None\nINFO     search memory limit: None\nINFO     search command line string: /home/james/repos/nl2pddl3/.venv/lib/python3.10/site-packages/forbiditerative/builds/release/bin/downward --evaluator 'h=lmcount(lm_factory=lm_exhaust(),dump_action_landmarks=true)' --always --search 'lazy_greedy([h,const(infinity())])' --internal-plan-file sas_plan < output.sas\n[t=2.7248e-05s, 11192 KB] reading input...\n[t=0.000173762s, 11328 KB] done reading input!\n[t=0.00108425s, 11584 KB] Initializing landmark count heuristic...\n[t=0.00112737s, 11584 KB] Generating landmark graph...\n[t=0.00115736s, 11584 KB] Initializing Exploration...\n[t=0.00118417s, 11584 KB] Generating landmarks by testing all facts with RPG method\n[t=0.00123399s, 11584 KB] Removed 0 reasonable or obedient reasonable orders\n[t=0.00125462s, 11584 KB] Landmarks generation time: 0.000114052s\n[t=0.00127365s, 11584 KB] Discovered 10 landmarks, of which 0 are disjunctive and 0 are conjunctive.\n[t=0.00128571s, 11584 KB] 0 edges\n[t=0.00130266s, 11584 KB] Landmark graph generation time: 0.000185597s\n[t=0.00132187s, 11584 KB] Landmark graph contains 10 landmarks, of which 0 are disjunctive and 0 are conjunctive.\n[t=0.00133134s, 11584 KB] Landmark graph contains 0 orderings.\n[t=0.00134754s, 11584 KB] Dumping landmarks from landmark graph: \n[t=0.00141481s, 11584 KB] Action landmarks end.\n[t=0.00148076s, 11584 KB] Building successor generator...done!\n[t=0.00153217s, 11584 KB] peak memory difference for successor generator creation: 0 KB\n[t=0.00154782s, 11584 KB] time for successor generation creation: 7.751e-06s\n[t=0.00156138s, 11584 KB] Variables: 5\n[t=0.00157957s, 11584 KB] FactPairs: 12\n[t=0.00158911s, 11584 KB] Bytes per state: 4\n[t=0.00167276s, 11584 KB] Conducting lazy best first search, (real) bound = 2147483647\n[t=0.00173082s, 11584 KB] 5 initial landmarks, 2 goal landmarks\n[t=0.001754s, 11584 KB] Initial heuristic value for lmcount(lm_factory = lm_exhaust, dump_action_landmarks = true): 5\n[t=0.00177255s, 11584 KB] Completely explored state space -- no solution!\n[t=0.00178227s, 11584 KB] Actual search time: 3.8953e-05s\n[t=0.00179778s, 11584 KB] Expanded 0 state(s).\n[t=0.00179778s, 11584 KB] Reopened 0 state(s).\n[t=0.00179778s, 11584 KB] Evaluated 1 state(s).\n[t=0.00179778s, 11584 KB] Evaluations: 1\n[t=0.00179778s, 11584 KB] Generated 0 state(s).\n[t=0.00179778s, 11584 KB] Dead ends: 1 state(s).\n[t=0.00179778s, 11584 KB] Number of registered states: 1\n[t=0.00179778s, 11584 KB] Int hash set load factor: 1/1 = 1\n[t=0.00179778s, 11584 KB] Int hash set resizes: 0\n[t=0.00179778s, 11584 KB] Search time: 0.000125377s\n[t=0.00179778s, 11584 KB] Total time: 0.00179778s\nSearch stopped without finding a solution.\nPeak memory: 11584 KB\nRemove intermediate file output.sas\nsearch exit code: 12\n\nDriver aborting after search\nINFO     Planner time: 0.07s\n", "planner_error": "", "landmarks": [{"facts": ["Atom ontable(b1)"], "disjunctive": "False", "first_achievers": ["put-down b1"]}, {"facts": ["Atom on(b2, b1)"], "disjunctive": "False", "first_achievers": ["stack b2 b1"]}, {"facts": ["Atom clear(b1)"], "disjunctive": "False", "first_achievers": ["put-down b1", "stack b1 b2", "unstack b2 b1"]}, {"facts": ["NegatedAtom clear(b1)"], "disjunctive": "False", "first_achievers": ["pick-up b1", "stack b2 b1"]}, {"facts": ["Atom clear(b2)"], "disjunctive": "False", "first_achievers": ["put-down b2", "stack b2 b1", "unstack b1 b2"]}, {"facts": ["NegatedAtom clear(b2)"], "disjunctive": "False", "first_achievers": ["pick-up b2", "stack b1 b2"]}, {"facts": ["Atom handempty()"], "disjunctive": "False", "first_achievers": ["put-down b1", "put-down b2", "stack b1 b2", "stack b2 b1"]}, {"facts": ["NegatedAtom handempty()"], "disjunctive": "False", "first_achievers": ["pick-up b1", "pick-up b2"]}, {"facts": ["Atom holding(b2)"], "disjunctive": "False", "first_achievers": ["pick-up b2"]}, {"facts": ["Atom ontable(b2)"], "disjunctive": "False", "first_achievers": ["put-down b2"]}]}