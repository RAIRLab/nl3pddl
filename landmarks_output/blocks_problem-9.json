{"planner_output": "INFO     planner time limit: None\nINFO     planner memory limit: None\n\nINFO     Running translator.\nINFO     translator stdin: None\nINFO     translator time limit: None\nINFO     translator memory limit: None\nINFO     translator command line string: /home/james/repos/nl2pddl3/.venv/bin/python /home/james/repos/nl2pddl3/.venv/lib/python3.10/site-packages/forbiditerative/builds/release/bin/translate/translate.py /home/james/repos/nl2pddl3/data/domains/blocks/ground.pddl /home/james/repos/nl2pddl3/data/gen_problems/testing/blocks/problem-9.pddl --sas-file output.sas\nParsing...\nParsing: [0.000s CPU, 0.003s wall-clock]\nNormalizing task... [0.000s CPU, 0.000s wall-clock]\nInstantiating...\nGenerating Datalog program... [0.000s CPU, 0.000s wall-clock]\nNormalizing Datalog program...\nNormalizing Datalog program: [0.000s CPU, 0.001s wall-clock]\nPreparing model... [0.000s CPU, 0.000s wall-clock]\nGenerated 21 rules.\nComputing model... [0.010s CPU, 0.006s wall-clock]\n1118 relevant atoms\n738 auxiliary atoms\n1856 final queue length\n3203 total queue pushes\nCompleting instantiation... [0.010s CPU, 0.011s wall-clock]\nInstantiating: [0.020s CPU, 0.018s wall-clock]\nComputing fact groups...\nFinding invariants...\n10 initial candidates\nFinding invariants: [0.000s CPU, 0.001s wall-clock]\nChecking invariant weight... [0.000s CPU, 0.000s wall-clock]\nInstantiating groups... [0.000s CPU, 0.000s wall-clock]\nCollecting mutex groups... [0.000s CPU, 0.000s wall-clock]\nChoosing groups...\n19 uncovered facts\nChoosing groups: [0.000s CPU, 0.001s wall-clock]\nBuilding translation key... [0.000s CPU, 0.000s wall-clock]\nComputing fact groups: [0.000s CPU, 0.004s wall-clock]\nBuilding STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]\nBuilding dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]\nBuilding mutex information...\nBuilding mutex information: [0.000s CPU, 0.000s wall-clock]\nTranslating task...\nProcessing axioms...\nSimplifying axioms... [0.000s CPU, 0.000s wall-clock]\nTranslator axioms removed by simplifying: 0\nComputing negative axioms... [0.000s CPU, 0.000s wall-clock]\nProcessing axioms: [0.000s CPU, 0.001s wall-clock]\nTranslating task: [0.010s CPU, 0.014s wall-clock]\n954 effect conditions simplified\n0 implied preconditions added\nDetecting unreachable propositions...\n0 operators removed\n0 axioms removed\n36 propositions removed\nDetecting unreachable propositions: [0.010s CPU, 0.007s wall-clock]\nReordering and filtering variables...\n37 of 37 variables necessary.\n19 of 37 mutex groups necessary.\n648 of 648 operators necessary.\n0 of 0 axiom rules necessary.\nReordering and filtering variables: [0.000s CPU, 0.004s wall-clock]\nTranslator variables: 37\nTranslator derived variables: 0\nTranslator facts: 380\nTranslator goal facts: 18\nTranslator mutex groups: 19\nTranslator total mutex groups size: 361\nTranslator operators: 648\nTranslator axioms: 0\nTranslator task size: 5602\nTranslator peak memory: 31984 KB\nWriting output... [0.010s CPU, 0.003s wall-clock]\nDone! [0.050s CPU, 0.053s wall-clock]\ntranslate exit code: 0\n\nINFO     Running search (/home/james/repos/nl2pddl3/.venv/lib/python3.10/site-packages/forbiditerative/builds/release/bin).\nINFO     search stdin: output.sas\nINFO     search time limit: None\nINFO     search memory limit: None\nINFO     search command line string: /home/james/repos/nl2pddl3/.venv/lib/python3.10/site-packages/forbiditerative/builds/release/bin/downward --evaluator 'h=lmcount(lm_factory=lm_exhaust(),dump_action_landmarks=true)' --always --search 'lazy_greedy([h,const(infinity())])' --internal-plan-file sas_plan < output.sas\n[t=3.0505e-05s, 11192 KB] reading input...\n[t=0.00240229s, 11852 KB] done reading input!\n[t=0.00341638s, 12116 KB] Initializing landmark count heuristic...\n[t=0.00348998s, 12116 KB] Generating landmark graph...\n[t=0.00356208s, 12248 KB] Initializing Exploration...\n[t=0.00391313s, 12684 KB] Generating landmarks by testing all facts with RPG method\n[t=0.0196536s, 12888 KB] Removed 0 reasonable or obedient reasonable orders\n[t=0.0198244s, 12888 KB] Landmarks generation time: 0.0163559s\n[t=0.0198727s, 12888 KB] Discovered 82 landmarks, of which 0 are disjunctive and 0 are conjunctive.\n[t=0.0198837s, 12888 KB] 0 edges\n[t=0.0198909s, 12888 KB] Landmark graph generation time: 0.0164077s\n[t=0.0198976s, 12888 KB] Landmark graph contains 82 landmarks, of which 0 are disjunctive and 0 are conjunctive.\n[t=0.0199049s, 12888 KB] Landmark graph contains 0 orderings.\n[t=0.019914s, 12888 KB] Dumping landmarks from landmark graph: \n[t=0.0201988s, 12888 KB] Action landmarks end.\n[t=0.0203015s, 12888 KB] Building successor generator...done!\n[t=0.0204586s, 12888 KB] peak memory difference for successor generator creation: 0 KB\n[t=0.0204763s, 12888 KB] time for successor generation creation: 9.9953e-05s\n[t=0.0204899s, 12888 KB] Variables: 37\n[t=0.0205086s, 12888 KB] FactPairs: 380\n[t=0.020518s, 12888 KB] Bytes per state: 16\n[t=0.0206233s, 12888 KB] Conducting lazy best first search, (real) bound = 2147483647\n[t=0.0206836s, 12888 KB] 37 initial landmarks, 18 goal landmarks\n[t=0.020708s, 12888 KB] Initial heuristic value for lmcount(lm_factory = lm_exhaust, dump_action_landmarks = true): 45\n[t=0.0207264s, 12888 KB] Completely explored state space -- no solution!\n[t=0.0207377s, 12888 KB] Actual search time: 4.3789e-05s\n[t=0.0207562s, 12888 KB] Expanded 0 state(s).\n[t=0.0207562s, 12888 KB] Reopened 0 state(s).\n[t=0.0207562s, 12888 KB] Evaluated 1 state(s).\n[t=0.0207562s, 12888 KB] Evaluations: 1\n[t=0.0207562s, 12888 KB] Generated 0 state(s).\n[t=0.0207562s, 12888 KB] Dead ends: 1 state(s).\n[t=0.0207562s, 12888 KB] Number of registered states: 1\n[t=0.0207562s, 12888 KB] Int hash set load factor: 1/1 = 1\n[t=0.0207562s, 12888 KB] Int hash set resizes: 0\n[t=0.0207562s, 12888 KB] Search time: 0.000133394s\n[t=0.0207562s, 12888 KB] Total time: 0.0207562s\nSearch stopped without finding a solution.\nPeak memory: 12888 KB\nRemove intermediate file output.sas\nsearch exit code: 12\n\nDriver aborting after search\nINFO     Planner time: 0.13s\n", "planner_error": "", "landmarks": [{"facts": ["Atom on(b1, b10)"], "disjunctive": "False", "first_achievers": ["stack b1 b10"]}, {"facts": ["Atom on(b10, b6)"], "disjunctive": "False", "first_achievers": ["stack b10 b6"]}, {"facts": ["Atom on(b11, b13)"], "disjunctive": "False", "first_achievers": ["stack b11 b13"]}, {"facts": ["Atom ontable(b12)"], "disjunctive": "False", "first_achievers": ["put-down b12"]}, {"facts": ["Atom ontable(b13)"], "disjunctive": "False", "first_achievers": ["put-down b13"]}, {"facts": ["Atom ontable(b14)"], "disjunctive": "False", "first_achievers": ["put-down b14"]}, {"facts": ["Atom on(b15, b18)"], "disjunctive": "False", "first_achievers": ["stack b15 b18"]}, {"facts": ["Atom on(b16, b12)"], "disjunctive": "False", "first_achievers": ["stack b16 b12"]}, {"facts": ["Atom on(b17, b11)"], "disjunctive": "False", "first_achievers": ["stack b17 b11"]}, {"facts": ["Atom ontable(b18)"], "disjunctive": "False", "first_achievers": ["put-down b18"]}, {"facts": ["Atom on(b2, b3)"], "disjunctive": "False", "first_achievers": ["stack b2 b3"]}, {"facts": ["Atom on(b3, b14)"], "disjunctive": "False", "first_achievers": ["stack b3 b14"]}, {"facts": ["Atom on(b4, b15)"], "disjunctive": "False", "first_achievers": ["stack b4 b15"]}, {"facts": ["Atom on(b5, b8)"], "disjunctive": "False", "first_achievers": ["stack b5 b8"]}, {"facts": ["Atom ontable(b6)"], "disjunctive": "False", "first_achievers": ["put-down b6"]}, {"facts": ["Atom ontable(b7)"], "disjunctive": "False", "first_achievers": ["put-down b7"]}, {"facts": ["Atom on(b8, b7)"], "disjunctive": "False", "first_achievers": ["stack b8 b7"]}, {"facts": ["Atom on(b9, b16)"], "disjunctive": "False", "first_achievers": ["stack b9 b16"]}, {"facts": ["Atom clear(b1)"], "disjunctive": "False", "first_achievers": ["put-down b1", "stack b1 b10", "stack b1 b11", "stack b1 b12", "stack b1 b13", "stack b1 b14", "stack b1 b15", "stack b1 b16", "stack b1 b17", "stack b1 b18", "stack b1 b2", "stack b1 b3", "stack b1 b4", "stack b1 b5", "stack b1 b6", "stack b1 b7", "stack b1 b8", "stack b1 b9", "unstack b10 b1", "unstack b11 b1", "unstack b12 b1", "unstack b13 b1", "unstack b14 b1", "unstack b15 b1", "unstack b16 b1", "unstack b17 b1", "unstack b18 b1", "unstack b2 b1", "unstack b3 b1", "unstack b4 b1", "unstack b5 b1", "unstack b6 b1", "unstack b7 b1", "unstack b8 b1", "unstack b9 b1"]}, {"facts": ["NegatedAtom clear(b1)"], "disjunctive": "False", "first_achievers": ["pick-up b1", "stack b10 b1", "stack b11 b1", "stack b12 b1", "stack b13 b1", "stack b14 b1", "stack b15 b1", "stack b16 b1", "stack b17 b1", "stack b18 b1", "stack b2 b1", "stack b3 b1", "stack b4 b1", "stack b5 b1", "stack b6 b1", "stack b7 b1", "stack b8 b1", "stack b9 b1"]}, {"facts": ["Atom clear(b10)"], "disjunctive": "False", "first_achievers": ["unstack b15 b10"]}, {"facts": ["NegatedAtom clear(b10)"], "disjunctive": "False", "first_achievers": ["pick-up b10", "stack b1 b10", "stack b11 b10", "stack b12 b10", "stack b13 b10", "stack b14 b10", "stack b15 b10", "stack b16 b10", "stack b17 b10", "stack b18 b10", "stack b2 b10", "stack b3 b10", "stack b4 b10", "stack b5 b10", "stack b6 b10", "stack b7 b10", "stack b8 b10", "stack b9 b10"]}, {"facts": ["Atom clear(b11)"], "disjunctive": "False", "first_achievers": ["put-down b11", "stack b11 b1", "stack b11 b10", "stack b11 b12", "stack b11 b13", "stack b11 b14", "stack b11 b15", "stack b11 b16", "stack b11 b17", "stack b11 b18", "stack b11 b2", "stack b11 b3", "stack b11 b4", "stack b11 b5", "stack b11 b6", "stack b11 b7", "stack b11 b8", "stack b11 b9", "unstack b1 b11", "unstack b10 b11", "unstack b12 b11", "unstack b13 b11", "unstack b14 b11", "unstack b15 b11", "unstack b16 b11", "unstack b17 b11", "unstack b18 b11", "unstack b2 b11", "unstack b3 b11", "unstack b4 b11", "unstack b5 b11", "unstack b6 b11", "unstack b7 b11", "unstack b8 b11", "unstack b9 b11"]}, {"facts": ["NegatedAtom clear(b11)"], "disjunctive": "False", "first_achievers": ["pick-up b11", "stack b1 b11", "stack b10 b11", "stack b12 b11", "stack b13 b11", "stack b14 b11", "stack b15 b11", "stack b16 b11", "stack b17 b11", "stack b18 b11", "stack b2 b11", "stack b3 b11", "stack b4 b11", "stack b5 b11", "stack b6 b11", "stack b7 b11", "stack b8 b11", "stack b9 b11"]}, {"facts": ["Atom clear(b12)"], "disjunctive": "False", "first_achievers": ["put-down b12", "stack b12 b1", "stack b12 b10", "stack b12 b11", "stack b12 b13", "stack b12 b14", "stack b12 b15", "stack b12 b16", "stack b12 b17", "stack b12 b18", "stack b12 b2", "stack b12 b3", "stack b12 b4", "stack b12 b5", "stack b12 b6", "stack b12 b7", "stack b12 b8", "stack b12 b9", "unstack b1 b12", "unstack b10 b12", "unstack b11 b12", "unstack b13 b12", "unstack b14 b12", "unstack b15 b12", "unstack b16 b12", "unstack b17 b12", "unstack b18 b12", "unstack b2 b12", "unstack b3 b12", "unstack b4 b12", "unstack b5 b12", "unstack b6 b12", "unstack b7 b12", "unstack b8 b12", "unstack b9 b12"]}, {"facts": ["NegatedAtom clear(b12)"], "disjunctive": "False", "first_achievers": ["pick-up b12", "stack b1 b12", "stack b10 b12", "stack b11 b12", "stack b13 b12", "stack b14 b12", "stack b15 b12", "stack b16 b12", "stack b17 b12", "stack b18 b12", "stack b2 b12", "stack b3 b12", "stack b4 b12", "stack b5 b12", "stack b6 b12", "stack b7 b12", "stack b8 b12", "stack b9 b12"]}, {"facts": ["Atom clear(b13)"], "disjunctive": "False", "first_achievers": ["put-down b13", "stack b13 b1", "stack b13 b10", "stack b13 b11", "stack b13 b12", "stack b13 b14", "stack b13 b15", "stack b13 b16", "stack b13 b17", "stack b13 b18", "stack b13 b2", "stack b13 b3", "stack b13 b4", "stack b13 b5", "stack b13 b6", "stack b13 b7", "stack b13 b8", "stack b13 b9", "unstack b1 b13", "unstack b10 b13", "unstack b11 b13", "unstack b12 b13", "unstack b14 b13", "unstack b15 b13", "unstack b16 b13", "unstack b17 b13", "unstack b18 b13", "unstack b2 b13", "unstack b3 b13", "unstack b4 b13", "unstack b5 b13", "unstack b6 b13", "unstack b7 b13", "unstack b8 b13", "unstack b9 b13"]}, {"facts": ["NegatedAtom clear(b13)"], "disjunctive": "False", "first_achievers": ["pick-up b13", "stack b1 b13", "stack b10 b13", "stack b11 b13", "stack b12 b13", "stack b14 b13", "stack b15 b13", "stack b16 b13", "stack b17 b13", "stack b18 b13", "stack b2 b13", "stack b3 b13", "stack b4 b13", "stack b5 b13", "stack b6 b13", "stack b7 b13", "stack b8 b13", "stack b9 b13"]}, {"facts": ["Atom clear(b14)"], "disjunctive": "False", "first_achievers": ["put-down b14", "stack b14 b1", "stack b14 b10", "stack b14 b11", "stack b14 b12", "stack b14 b13", "stack b14 b15", "stack b14 b16", "stack b14 b17", "stack b14 b18", "stack b14 b2", "stack b14 b3", "stack b14 b4", "stack b14 b5", "stack b14 b6", "stack b14 b7", "stack b14 b8", "stack b14 b9", "unstack b1 b14", "unstack b10 b14", "unstack b11 b14", "unstack b12 b14", "unstack b13 b14", "unstack b15 b14", "unstack b16 b14", "unstack b17 b14", "unstack b18 b14", "unstack b2 b14", "unstack b3 b14", "unstack b4 b14", "unstack b5 b14", "unstack b6 b14", "unstack b7 b14", "unstack b8 b14", "unstack b9 b14"]}, {"facts": ["NegatedAtom clear(b14)"], "disjunctive": "False", "first_achievers": ["stack b1 b14", "stack b10 b14", "stack b11 b14", "stack b12 b14", "stack b13 b14", "stack b15 b14", "stack b16 b14", "stack b17 b14", "stack b18 b14", "stack b2 b14", "stack b3 b14", "stack b4 b14", "stack b6 b14", "stack b7 b14", "stack b8 b14", "stack b9 b14", "unstack b14 b5"]}, {"facts": ["Atom clear(b15)"], "disjunctive": "False", "first_achievers": ["put-down b15", "stack b15 b1", "stack b15 b10", "stack b15 b11", "stack b15 b12", "stack b15 b13", "stack b15 b14", "stack b15 b16", "stack b15 b17", "stack b15 b18", "stack b15 b2", "stack b15 b3", "stack b15 b4", "stack b15 b5", "stack b15 b6", "stack b15 b7", "stack b15 b8", "stack b15 b9", "unstack b1 b15", "unstack b10 b15", "unstack b11 b15", "unstack b12 b15", "unstack b13 b15", "unstack b14 b15", "unstack b16 b15", "unstack b17 b15", "unstack b18 b15", "unstack b2 b15", "unstack b3 b15", "unstack b4 b15", "unstack b5 b15", "unstack b6 b15", "unstack b7 b15", "unstack b8 b15", "unstack b9 b15"]}, {"facts": ["NegatedAtom clear(b15)"], "disjunctive": "False", "first_achievers": ["stack b1 b15", "stack b11 b15", "stack b12 b15", "stack b13 b15", "stack b14 b15", "stack b16 b15", "stack b17 b15", "stack b18 b15", "stack b2 b15", "stack b3 b15", "stack b4 b15", "stack b5 b15", "stack b6 b15", "stack b7 b15", "stack b8 b15", "stack b9 b15", "unstack b15 b10"]}, {"facts": ["Atom clear(b16)"], "disjunctive": "False", "first_achievers": ["put-down b16", "stack b16 b1", "stack b16 b10", "stack b16 b11", "stack b16 b12", "stack b16 b13", "stack b16 b14", "stack b16 b15", "stack b16 b17", "stack b16 b18", "stack b16 b2", "stack b16 b3", "stack b16 b4", "stack b16 b5", "stack b16 b6", "stack b16 b7", "stack b16 b8", "stack b16 b9", "unstack b1 b16", "unstack b10 b16", "unstack b11 b16", "unstack b12 b16", "unstack b13 b16", "unstack b14 b16", "unstack b15 b16", "unstack b17 b16", "unstack b18 b16", "unstack b2 b16", "unstack b3 b16", "unstack b4 b16", "unstack b5 b16", "unstack b6 b16", "unstack b7 b16", "unstack b8 b16", "unstack b9 b16"]}, {"facts": ["NegatedAtom clear(b16)"], "disjunctive": "False", "first_achievers": ["pick-up b16", "stack b1 b16", "stack b10 b16", "stack b11 b16", "stack b12 b16", "stack b13 b16", "stack b14 b16", "stack b15 b16", "stack b17 b16", "stack b18 b16", "stack b2 b16", "stack b3 b16", "stack b4 b16", "stack b5 b16", "stack b6 b16", "stack b7 b16", "stack b8 b16", "stack b9 b16"]}, {"facts": ["Atom clear(b17)"], "disjunctive": "False", "first_achievers": ["put-down b17", "stack b17 b1", "stack b17 b10", "stack b17 b11", "stack b17 b12", "stack b17 b13", "stack b17 b14", "stack b17 b15", "stack b17 b16", "stack b17 b18", "stack b17 b2", "stack b17 b3", "stack b17 b4", "stack b17 b5", "stack b17 b6", "stack b17 b7", "stack b17 b8", "stack b17 b9", "unstack b1 b17", "unstack b10 b17", "unstack b11 b17", "unstack b12 b17", "unstack b13 b17", "unstack b14 b17", "unstack b15 b17", "unstack b16 b17", "unstack b18 b17", "unstack b2 b17", "unstack b3 b17", "unstack b4 b17", "unstack b5 b17", "unstack b6 b17", "unstack b7 b17", "unstack b8 b17", "unstack b9 b17"]}, {"facts": ["NegatedAtom clear(b17)"], "disjunctive": "False", "first_achievers": ["pick-up b17", "stack b1 b17", "stack b10 b17", "stack b11 b17", "stack b12 b17", "stack b13 b17", "stack b14 b17", "stack b15 b17", "stack b16 b17", "stack b18 b17", "stack b2 b17", "stack b3 b17", "stack b4 b17", "stack b5 b17", "stack b6 b17", "stack b7 b17", "stack b8 b17", "stack b9 b17"]}, {"facts": ["Atom clear(b18)"], "disjunctive": "False", "first_achievers": ["put-down b18", "stack b18 b1", "stack b18 b10", "stack b18 b11", "stack b18 b12", "stack b18 b13", "stack b18 b14", "stack b18 b15", "stack b18 b16", "stack b18 b17", "stack b18 b2", "stack b18 b3", "stack b18 b4", "stack b18 b5", "stack b18 b6", "stack b18 b7", "stack b18 b8", "stack b18 b9", "unstack b1 b18", "unstack b10 b18", "unstack b11 b18", "unstack b12 b18", "unstack b13 b18", "unstack b14 b18", "unstack b15 b18", "unstack b16 b18", "unstack b17 b18", "unstack b2 b18", "unstack b3 b18", "unstack b4 b18", "unstack b5 b18", "unstack b6 b18", "unstack b7 b18", "unstack b8 b18", "unstack b9 b18"]}, {"facts": ["NegatedAtom clear(b18)"], "disjunctive": "False", "first_achievers": ["pick-up b18", "stack b1 b18", "stack b10 b18", "stack b11 b18", "stack b12 b18", "stack b13 b18", "stack b14 b18", "stack b15 b18", "stack b16 b18", "stack b17 b18", "stack b2 b18", "stack b3 b18", "stack b4 b18", "stack b5 b18", "stack b6 b18", "stack b7 b18", "stack b8 b18", "stack b9 b18"]}, {"facts": ["Atom clear(b2)"], "disjunctive": "False", "first_achievers": ["put-down b2", "stack b2 b1", "stack b2 b10", "stack b2 b11", "stack b2 b12", "stack b2 b13", "stack b2 b14", "stack b2 b15", "stack b2 b16", "stack b2 b17", "stack b2 b18", "stack b2 b3", "stack b2 b4", "stack b2 b5", "stack b2 b6", "stack b2 b7", "stack b2 b8", "stack b2 b9", "unstack b1 b2", "unstack b10 b2", "unstack b11 b2", "unstack b12 b2", "unstack b13 b2", "unstack b14 b2", "unstack b15 b2", "unstack b16 b2", "unstack b17 b2", "unstack b18 b2", "unstack b3 b2", "unstack b4 b2", "unstack b5 b2", "unstack b6 b2", "unstack b7 b2", "unstack b8 b2", "unstack b9 b2"]}, {"facts": ["NegatedAtom clear(b2)"], "disjunctive": "False", "first_achievers": ["pick-up b2", "stack b1 b2", "stack b10 b2", "stack b11 b2", "stack b12 b2", "stack b13 b2", "stack b14 b2", "stack b15 b2", "stack b16 b2", "stack b17 b2", "stack b18 b2", "stack b3 b2", "stack b4 b2", "stack b5 b2", "stack b6 b2", "stack b7 b2", "stack b8 b2", "stack b9 b2"]}, {"facts": ["Atom clear(b3)"], "disjunctive": "False", "first_achievers": ["put-down b3", "stack b3 b1", "stack b3 b10", "stack b3 b11", "stack b3 b12", "stack b3 b13", "stack b3 b14", "stack b3 b15", "stack b3 b16", "stack b3 b17", "stack b3 b18", "stack b3 b2", "stack b3 b4", "stack b3 b5", "stack b3 b6", "stack b3 b7", "stack b3 b8", "stack b3 b9", "unstack b1 b3", "unstack b10 b3", "unstack b11 b3", "unstack b12 b3", "unstack b13 b3", "unstack b14 b3", "unstack b15 b3", "unstack b16 b3", "unstack b17 b3", "unstack b18 b3", "unstack b2 b3", "unstack b4 b3", "unstack b5 b3", "unstack b6 b3", "unstack b7 b3", "unstack b8 b3", "unstack b9 b3"]}, {"facts": ["NegatedAtom clear(b3)"], "disjunctive": "False", "first_achievers": ["pick-up b3", "stack b1 b3", "stack b10 b3", "stack b11 b3", "stack b12 b3", "stack b13 b3", "stack b14 b3", "stack b15 b3", "stack b16 b3", "stack b17 b3", "stack b18 b3", "stack b2 b3", "stack b4 b3", "stack b5 b3", "stack b6 b3", "stack b7 b3", "stack b8 b3", "stack b9 b3"]}, {"facts": ["Atom clear(b4)"], "disjunctive": "False", "first_achievers": ["put-down b4", "stack b4 b1", "stack b4 b10", "stack b4 b11", "stack b4 b12", "stack b4 b13", "stack b4 b14", "stack b4 b15", "stack b4 b16", "stack b4 b17", "stack b4 b18", "stack b4 b2", "stack b4 b3", "stack b4 b5", "stack b4 b6", "stack b4 b7", "stack b4 b8", "stack b4 b9", "unstack b1 b4", "unstack b10 b4", "unstack b11 b4", "unstack b12 b4", "unstack b13 b4", "unstack b14 b4", "unstack b15 b4", "unstack b16 b4", "unstack b17 b4", "unstack b18 b4", "unstack b2 b4", "unstack b3 b4", "unstack b5 b4", "unstack b6 b4", "unstack b7 b4", "unstack b8 b4", "unstack b9 b4"]}, {"facts": ["NegatedAtom clear(b4)"], "disjunctive": "False", "first_achievers": ["stack b1 b4", "stack b10 b4", "stack b11 b4", "stack b12 b4", "stack b13 b4", "stack b14 b4", "stack b15 b4", "stack b16 b4", "stack b17 b4", "stack b18 b4", "stack b2 b4", "stack b3 b4", "stack b5 b4", "stack b6 b4", "stack b7 b4", "stack b8 b4", "unstack b4 b9"]}, {"facts": ["Atom clear(b5)"], "disjunctive": "False", "first_achievers": ["unstack b14 b5"]}, {"facts": ["NegatedAtom clear(b5)"], "disjunctive": "False", "first_achievers": ["pick-up b5", "stack b1 b5", "stack b10 b5", "stack b11 b5", "stack b12 b5", "stack b13 b5", "stack b14 b5", "stack b15 b5", "stack b16 b5", "stack b17 b5", "stack b18 b5", "stack b2 b5", "stack b3 b5", "stack b4 b5", "stack b6 b5", "stack b7 b5", "stack b8 b5", "stack b9 b5"]}, {"facts": ["Atom clear(b6)"], "disjunctive": "False", "first_achievers": ["put-down b6", "stack b6 b1", "stack b6 b10", "stack b6 b11", "stack b6 b12", "stack b6 b13", "stack b6 b14", "stack b6 b15", "stack b6 b16", "stack b6 b17", "stack b6 b18", "stack b6 b2", "stack b6 b3", "stack b6 b4", "stack b6 b5", "stack b6 b7", "stack b6 b8", "stack b6 b9", "unstack b1 b6", "unstack b10 b6", "unstack b11 b6", "unstack b12 b6", "unstack b13 b6", "unstack b14 b6", "unstack b15 b6", "unstack b16 b6", "unstack b17 b6", "unstack b18 b6", "unstack b2 b6", "unstack b3 b6", "unstack b4 b6", "unstack b5 b6", "unstack b7 b6", "unstack b8 b6", "unstack b9 b6"]}, {"facts": ["NegatedAtom clear(b6)"], "disjunctive": "False", "first_achievers": ["pick-up b6", "stack b1 b6", "stack b10 b6", "stack b11 b6", "stack b12 b6", "stack b13 b6", "stack b14 b6", "stack b15 b6", "stack b16 b6", "stack b17 b6", "stack b18 b6", "stack b2 b6", "stack b3 b6", "stack b4 b6", "stack b5 b6", "stack b7 b6", "stack b8 b6", "stack b9 b6"]}, {"facts": ["Atom clear(b7)"], "disjunctive": "False", "first_achievers": ["put-down b7", "stack b7 b1", "stack b7 b10", "stack b7 b11", "stack b7 b12", "stack b7 b13", "stack b7 b14", "stack b7 b15", "stack b7 b16", "stack b7 b17", "stack b7 b18", "stack b7 b2", "stack b7 b3", "stack b7 b4", "stack b7 b5", "stack b7 b6", "stack b7 b8", "stack b7 b9", "unstack b1 b7", "unstack b10 b7", "unstack b11 b7", "unstack b12 b7", "unstack b13 b7", "unstack b14 b7", "unstack b15 b7", "unstack b16 b7", "unstack b17 b7", "unstack b18 b7", "unstack b2 b7", "unstack b3 b7", "unstack b4 b7", "unstack b5 b7", "unstack b6 b7", "unstack b8 b7", "unstack b9 b7"]}, {"facts": ["NegatedAtom clear(b7)"], "disjunctive": "False", "first_achievers": ["pick-up b7", "stack b1 b7", "stack b10 b7", "stack b11 b7", "stack b12 b7", "stack b13 b7", "stack b14 b7", "stack b15 b7", "stack b16 b7", "stack b17 b7", "stack b18 b7", "stack b2 b7", "stack b3 b7", "stack b4 b7", "stack b5 b7", "stack b6 b7", "stack b8 b7", "stack b9 b7"]}, {"facts": ["Atom clear(b8)"], "disjunctive": "False", "first_achievers": ["put-down b8", "stack b8 b1", "stack b8 b10", "stack b8 b11", "stack b8 b12", "stack b8 b13", "stack b8 b14", "stack b8 b15", "stack b8 b16", "stack b8 b17", "stack b8 b18", "stack b8 b2", "stack b8 b3", "stack b8 b4", "stack b8 b5", "stack b8 b6", "stack b8 b7", "stack b8 b9", "unstack b1 b8", "unstack b10 b8", "unstack b11 b8", "unstack b12 b8", "unstack b13 b8", "unstack b14 b8", "unstack b15 b8", "unstack b16 b8", "unstack b17 b8", "unstack b18 b8", "unstack b2 b8", "unstack b3 b8", "unstack b4 b8", "unstack b5 b8", "unstack b6 b8", "unstack b7 b8", "unstack b9 b8"]}, {"facts": ["NegatedAtom clear(b8)"], "disjunctive": "False", "first_achievers": ["pick-up b8", "stack b1 b8", "stack b10 b8", "stack b11 b8", "stack b12 b8", "stack b13 b8", "stack b14 b8", "stack b15 b8", "stack b16 b8", "stack b17 b8", "stack b18 b8", "stack b2 b8", "stack b3 b8", "stack b4 b8", "stack b5 b8", "stack b6 b8", "stack b7 b8", "stack b9 b8"]}, {"facts": ["Atom clear(b9)"], "disjunctive": "False", "first_achievers": ["unstack b4 b9"]}, {"facts": ["NegatedAtom clear(b9)"], "disjunctive": "False", "first_achievers": ["pick-up b9", "stack b1 b9", "stack b10 b9", "stack b11 b9", "stack b12 b9", "stack b13 b9", "stack b14 b9", "stack b15 b9", "stack b16 b9", "stack b17 b9", "stack b18 b9", "stack b2 b9", "stack b3 b9", "stack b4 b9", "stack b5 b9", "stack b6 b9", "stack b7 b9", "stack b8 b9"]}, {"facts": ["Atom handempty()"], "disjunctive": "False", "first_achievers": ["put-down b1", "put-down b10", "put-down b11", "put-down b12", "put-down b13", "put-down b14", "put-down b15", "put-down b16", "put-down b17", "put-down b18", "put-down b2", "put-down b3", "put-down b4", "put-down b5", "put-down b6", "put-down b7", "put-down b8", "put-down b9", "stack b1 b10", "stack b1 b11", "stack b1 b12", "stack b1 b13", "stack b1 b14", "stack b1 b15", "stack b1 b16", "stack b1 b17", "stack b1 b18", "stack b1 b2", "stack b1 b3", "stack b1 b4", "stack b1 b5", "stack b1 b6", "stack b1 b7", "stack b1 b8", "stack b1 b9", "stack b10 b1", "stack b10 b11", "stack b10 b12", "stack b10 b13", "stack b10 b14", "stack b10 b15", "stack b10 b16", "stack b10 b17", "stack b10 b18", "stack b10 b2", "stack b10 b3", "stack b10 b4", "stack b10 b5", "stack b10 b6", "stack b10 b7", "stack b10 b8", "stack b10 b9", "stack b11 b1", "stack b11 b10", "stack b11 b12", "stack b11 b13", "stack b11 b14", "stack b11 b15", "stack b11 b16", "stack b11 b17", "stack b11 b18", "stack b11 b2", "stack b11 b3", "stack b11 b4", "stack b11 b5", "stack b11 b6", "stack b11 b7", "stack b11 b8", "stack b11 b9", "stack b12 b1", "stack b12 b10", "stack b12 b11", "stack b12 b13", "stack b12 b14", "stack b12 b15", "stack b12 b16", "stack b12 b17", "stack b12 b18", "stack b12 b2", "stack b12 b3", "stack b12 b4", "stack b12 b5", "stack b12 b6", "stack b12 b7", "stack b12 b8", "stack b12 b9", "stack b13 b1", "stack b13 b10", "stack b13 b11", "stack b13 b12", "stack b13 b14", "stack b13 b15", "stack b13 b16", "stack b13 b17", "stack b13 b18", "stack b13 b2", "stack b13 b3", "stack b13 b4", "stack b13 b5", "stack b13 b6", "stack b13 b7", "stack b13 b8", "stack b13 b9", "stack b14 b1", "stack b14 b10", "stack b14 b11", "stack b14 b12", "stack b14 b13", "stack b14 b15", "stack b14 b16", "stack b14 b17", "stack b14 b18", "stack b14 b2", "stack b14 b3", "stack b14 b4", "stack b14 b5", "stack b14 b6", "stack b14 b7", "stack b14 b8", "stack b14 b9", "stack b15 b1", "stack b15 b10", "stack b15 b11", "stack b15 b12", "stack b15 b13", "stack b15 b14", "stack b15 b16", "stack b15 b17", "stack b15 b18", "stack b15 b2", "stack b15 b3", "stack b15 b4", "stack b15 b5", "stack b15 b6", "stack b15 b7", "stack b15 b8", "stack b15 b9", "stack b16 b1", "stack b16 b10", "stack b16 b11", "stack b16 b12", "stack b16 b13", "stack b16 b14", "stack b16 b15", "stack b16 b17", "stack b16 b18", "stack b16 b2", "stack b16 b3", "stack b16 b4", "stack b16 b5", "stack b16 b6", "stack b16 b7", "stack b16 b8", "stack b16 b9", "stack b17 b1", "stack b17 b10", "stack b17 b11", "stack b17 b12", "stack b17 b13", "stack b17 b14", "stack b17 b15", "stack b17 b16", "stack b17 b18", "stack b17 b2", "stack b17 b3", "stack b17 b4", "stack b17 b5", "stack b17 b6", "stack b17 b7", "stack b17 b8", "stack b17 b9", "stack b18 b1", "stack b18 b10", "stack b18 b11", "stack b18 b12", "stack b18 b13", "stack b18 b14", "stack b18 b15", "stack b18 b16", "stack b18 b17", "stack b18 b2", "stack b18 b3", "stack b18 b4", "stack b18 b5", "stack b18 b6", "stack b18 b7", "stack b18 b8", "stack b18 b9", "stack b2 b1", "stack b2 b10", "stack b2 b11", "stack b2 b12", "stack b2 b13", "stack b2 b14", "stack b2 b15", "stack b2 b16", "stack b2 b17", "stack b2 b18", "stack b2 b3", "stack b2 b4", "stack b2 b5", "stack b2 b6", "stack b2 b7", "stack b2 b8", "stack b2 b9", "stack b3 b1", "stack b3 b10", "stack b3 b11", "stack b3 b12", "stack b3 b13", "stack b3 b14", "stack b3 b15", "stack b3 b16", "stack b3 b17", "stack b3 b18", "stack b3 b2", "stack b3 b4", "stack b3 b5", "stack b3 b6", "stack b3 b7", "stack b3 b8", "stack b3 b9", "stack b4 b1", "stack b4 b10", "stack b4 b11", "stack b4 b12", "stack b4 b13", "stack b4 b14", "stack b4 b15", "stack b4 b16", "stack b4 b17", "stack b4 b18", "stack b4 b2", "stack b4 b3", "stack b4 b5", "stack b4 b6", "stack b4 b7", "stack b4 b8", "stack b4 b9", "stack b5 b1", "stack b5 b10", "stack b5 b11", "stack b5 b12", "stack b5 b13", "stack b5 b14", "stack b5 b15", "stack b5 b16", "stack b5 b17", "stack b5 b18", "stack b5 b2", "stack b5 b3", "stack b5 b4", "stack b5 b6", "stack b5 b7", "stack b5 b8", "stack b5 b9", "stack b6 b1", "stack b6 b10", "stack b6 b11", "stack b6 b12", "stack b6 b13", "stack b6 b14", "stack b6 b15", "stack b6 b16", "stack b6 b17", "stack b6 b18", "stack b6 b2", "stack b6 b3", "stack b6 b4", "stack b6 b5", "stack b6 b7", "stack b6 b8", "stack b6 b9", "stack b7 b1", "stack b7 b10", "stack b7 b11", "stack b7 b12", "stack b7 b13", "stack b7 b14", "stack b7 b15", "stack b7 b16", "stack b7 b17", "stack b7 b18", "stack b7 b2", "stack b7 b3", "stack b7 b4", "stack b7 b5", "stack b7 b6", "stack b7 b8", "stack b7 b9", "stack b8 b1", "stack b8 b10", "stack b8 b11", "stack b8 b12", "stack b8 b13", "stack b8 b14", "stack b8 b15", "stack b8 b16", "stack b8 b17", "stack b8 b18", "stack b8 b2", "stack b8 b3", "stack b8 b4", "stack b8 b5", "stack b8 b6", "stack b8 b7", "stack b8 b9", "stack b9 b1", "stack b9 b10", "stack b9 b11", "stack b9 b12", "stack b9 b13", "stack b9 b14", "stack b9 b15", "stack b9 b16", "stack b9 b17", "stack b9 b18", "stack b9 b2", "stack b9 b3", "stack b9 b4", "stack b9 b5", "stack b9 b6", "stack b9 b7", "stack b9 b8"]}, {"facts": ["NegatedAtom handempty()"], "disjunctive": "False", "first_achievers": ["pick-up b1", "pick-up b11", "pick-up b12", "pick-up b13", "pick-up b16", "pick-up b17", "pick-up b18", "pick-up b2", "pick-up b3", "pick-up b6", "pick-up b7", "pick-up b8", "unstack b14 b5", "unstack b15 b10", "unstack b4 b9"]}, {"facts": ["Atom holding(b1)"], "disjunctive": "False", "first_achievers": ["pick-up b1"]}, {"facts": ["Atom ontable(b1)"], "disjunctive": "False", "first_achievers": ["put-down b1"]}, {"facts": ["Atom holding(b10)"], "disjunctive": "False", "first_achievers": ["pick-up b10"]}, {"facts": ["Atom ontable(b10)"], "disjunctive": "False", "first_achievers": ["put-down b10"]}, {"facts": ["Atom holding(b11)"], "disjunctive": "False", "first_achievers": ["pick-up b11"]}, {"facts": ["Atom ontable(b11)"], "disjunctive": "False", "first_achievers": ["put-down b11"]}, {"facts": ["Atom holding(b14)"], "disjunctive": "False", "first_achievers": ["unstack b14 b5"]}, {"facts": ["Atom on(b14, b5)"], "disjunctive": "False", "first_achievers": ["stack b14 b5"]}, {"facts": ["Atom holding(b15)"], "disjunctive": "False", "first_achievers": ["unstack b15 b10"]}, {"facts": ["Atom on(b15, b10)"], "disjunctive": "False", "first_achievers": ["stack b15 b10"]}, {"facts": ["Atom holding(b16)"], "disjunctive": "False", "first_achievers": ["pick-up b16"]}, {"facts": ["Atom ontable(b16)"], "disjunctive": "False", "first_achievers": ["put-down b16"]}, {"facts": ["Atom holding(b17)"], "disjunctive": "False", "first_achievers": ["pick-up b17"]}, {"facts": ["Atom ontable(b17)"], "disjunctive": "False", "first_achievers": ["put-down b17"]}, {"facts": ["Atom holding(b2)"], "disjunctive": "False", "first_achievers": ["pick-up b2"]}, {"facts": ["Atom ontable(b2)"], "disjunctive": "False", "first_achievers": ["put-down b2"]}, {"facts": ["Atom holding(b3)"], "disjunctive": "False", "first_achievers": ["pick-up b3"]}, {"facts": ["Atom ontable(b3)"], "disjunctive": "False", "first_achievers": ["put-down b3"]}, {"facts": ["Atom holding(b4)"], "disjunctive": "False", "first_achievers": ["unstack b4 b9"]}, {"facts": ["Atom on(b4, b9)"], "disjunctive": "False", "first_achievers": ["stack b4 b9"]}, {"facts": ["Atom holding(b5)"], "disjunctive": "False", "first_achievers": ["pick-up b5"]}, {"facts": ["Atom ontable(b5)"], "disjunctive": "False", "first_achievers": ["put-down b5"]}, {"facts": ["Atom holding(b8)"], "disjunctive": "False", "first_achievers": ["pick-up b8"]}, {"facts": ["Atom ontable(b8)"], "disjunctive": "False", "first_achievers": ["put-down b8"]}, {"facts": ["Atom holding(b9)"], "disjunctive": "False", "first_achievers": ["pick-up b9"]}, {"facts": ["Atom ontable(b9)"], "disjunctive": "False", "first_achievers": ["put-down b9"]}]}