{"planner_output": "INFO     planner time limit: None\nINFO     planner memory limit: None\n\nINFO     Running translator.\nINFO     translator stdin: None\nINFO     translator time limit: None\nINFO     translator memory limit: None\nINFO     translator command line string: /home/james/repos/nl2pddl3/.venv/bin/python /home/james/repos/nl2pddl3/.venv/lib/python3.10/site-packages/forbiditerative/builds/release/bin/translate/translate.py /home/james/repos/nl2pddl3/data/domains/blocks/ground.pddl /home/james/repos/nl2pddl3/data/gen_problems/testing/blocks/problem-6.pddl --sas-file output.sas\nParsing...\nParsing: [0.000s CPU, 0.002s wall-clock]\nNormalizing task... [0.000s CPU, 0.000s wall-clock]\nInstantiating...\nGenerating Datalog program... [0.000s CPU, 0.000s wall-clock]\nNormalizing Datalog program...\nNormalizing Datalog program: [0.000s CPU, 0.001s wall-clock]\nPreparing model... [0.000s CPU, 0.000s wall-clock]\nGenerated 21 rules.\nComputing model... [0.000s CPU, 0.003s wall-clock]\n530 relevant atoms\n348 auxiliary atoms\n878 final queue length\n1482 total queue pushes\nCompleting instantiation... [0.010s CPU, 0.005s wall-clock]\nInstantiating: [0.010s CPU, 0.010s wall-clock]\nComputing fact groups...\nFinding invariants...\n10 initial candidates\nFinding invariants: [0.000s CPU, 0.002s wall-clock]\nChecking invariant weight... [0.000s CPU, 0.000s wall-clock]\nInstantiating groups... [0.000s CPU, 0.000s wall-clock]\nCollecting mutex groups... [0.000s CPU, 0.000s wall-clock]\nChoosing groups...\n13 uncovered facts\nChoosing groups: [0.000s CPU, 0.000s wall-clock]\nBuilding translation key... [0.000s CPU, 0.000s wall-clock]\nComputing fact groups: [0.000s CPU, 0.003s wall-clock]\nBuilding STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]\nBuilding dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]\nBuilding mutex information...\nBuilding mutex information: [0.000s CPU, 0.000s wall-clock]\nTranslating task...\nProcessing axioms...\nSimplifying axioms... [0.000s CPU, 0.000s wall-clock]\nTranslator axioms removed by simplifying: 0\nComputing negative axioms... [0.000s CPU, 0.000s wall-clock]\nProcessing axioms: [0.000s CPU, 0.000s wall-clock]\nTranslating task: [0.010s CPU, 0.006s wall-clock]\n420 effect conditions simplified\n0 implied preconditions added\nDetecting unreachable propositions...\n0 operators removed\n0 axioms removed\n24 propositions removed\nDetecting unreachable propositions: [0.000s CPU, 0.003s wall-clock]\nReordering and filtering variables...\n25 of 25 variables necessary.\n13 of 25 mutex groups necessary.\n288 of 288 operators necessary.\n0 of 0 axiom rules necessary.\nReordering and filtering variables: [0.000s CPU, 0.002s wall-clock]\nTranslator variables: 25\nTranslator derived variables: 0\nTranslator facts: 182\nTranslator goal facts: 12\nTranslator mutex groups: 13\nTranslator total mutex groups size: 169\nTranslator operators: 288\nTranslator axioms: 0\nTranslator task size: 2512\nTranslator peak memory: 29796 KB\nWriting output... [0.010s CPU, 0.002s wall-clock]\nDone! [0.030s CPU, 0.029s wall-clock]\ntranslate exit code: 0\n\nINFO     Running search (/home/james/repos/nl2pddl3/.venv/lib/python3.10/site-packages/forbiditerative/builds/release/bin).\nINFO     search stdin: output.sas\nINFO     search time limit: None\nINFO     search memory limit: None\nINFO     search command line string: /home/james/repos/nl2pddl3/.venv/lib/python3.10/site-packages/forbiditerative/builds/release/bin/downward --evaluator 'h=lmcount(lm_factory=lm_exhaust(),dump_action_landmarks=true)' --always --search 'lazy_greedy([h,const(infinity())])' --internal-plan-file sas_plan < output.sas\n[t=2.6973e-05s, 11192 KB] reading input...\n[t=0.00101423s, 11456 KB] done reading input!\n[t=0.00185533s, 11852 KB] Initializing landmark count heuristic...\n[t=0.00190765s, 11852 KB] Generating landmark graph...\n[t=0.00197868s, 11852 KB] Initializing Exploration...\n[t=0.00214616s, 12040 KB] Generating landmarks by testing all facts with RPG method\n[t=0.00541694s, 12172 KB] Removed 0 reasonable or obedient reasonable orders\n[t=0.00546713s, 12172 KB] Landmarks generation time: 0.00352715s\n[t=0.00548051s, 12172 KB] Discovered 58 landmarks, of which 0 are disjunctive and 0 are conjunctive.\n[t=0.00548694s, 12172 KB] 0 edges\n[t=0.00549273s, 12172 KB] Landmark graph generation time: 0.00359078s\n[t=0.00549895s, 12172 KB] Landmark graph contains 58 landmarks, of which 0 are disjunctive and 0 are conjunctive.\n[t=0.00550489s, 12172 KB] Landmark graph contains 0 orderings.\n[t=0.0055125s, 12172 KB] Dumping landmarks from landmark graph: \n[t=0.00565809s, 12172 KB] Action landmarks end.\n[t=0.00574505s, 12172 KB] Building successor generator...done!\n[t=0.00586072s, 12172 KB] peak memory difference for successor generator creation: 0 KB\n[t=0.0058803s, 12172 KB] time for successor generation creation: 6.7501e-05s\n[t=0.00588932s, 12172 KB] Variables: 25\n[t=0.00589747s, 12172 KB] FactPairs: 182\n[t=0.00590423s, 12172 KB] Bytes per state: 8\n[t=0.00598371s, 12172 KB] Conducting lazy best first search, (real) bound = 2147483647\n[t=0.00603689s, 12172 KB] 25 initial landmarks, 12 goal landmarks\n[t=0.00605146s, 12172 KB] Initial heuristic value for lmcount(lm_factory = lm_exhaust, dump_action_landmarks = true): 33\n[t=0.00606765s, 12172 KB] Completely explored state space -- no solution!\n[t=0.00607684s, 12172 KB] Actual search time: 3.6273e-05s\n[t=0.00609224s, 12172 KB] Expanded 0 state(s).\n[t=0.00609224s, 12172 KB] Reopened 0 state(s).\n[t=0.00609224s, 12172 KB] Evaluated 1 state(s).\n[t=0.00609224s, 12172 KB] Evaluations: 1\n[t=0.00609224s, 12172 KB] Generated 0 state(s).\n[t=0.00609224s, 12172 KB] Dead ends: 1 state(s).\n[t=0.00609224s, 12172 KB] Number of registered states: 1\n[t=0.00609224s, 12172 KB] Int hash set load factor: 1/1 = 1\n[t=0.00609224s, 12172 KB] Int hash set resizes: 0\n[t=0.00609224s, 12172 KB] Search time: 0.00010865s\n[t=0.00609224s, 12172 KB] Total time: 0.00609224s\nSearch stopped without finding a solution.\nPeak memory: 12172 KB\nRemove intermediate file output.sas\nsearch exit code: 12\n\nDriver aborting after search\nINFO     Planner time: 0.09s\n", "planner_error": "", "landmarks": [{"facts": ["Atom ontable(b1)"], "disjunctive": "False", "first_achievers": ["put-down b1"]}, {"facts": ["Atom on(b10, b11)"], "disjunctive": "False", "first_achievers": ["stack b10 b11"]}, {"facts": ["Atom ontable(b11)"], "disjunctive": "False", "first_achievers": ["put-down b11"]}, {"facts": ["Atom on(b12, b2)"], "disjunctive": "False", "first_achievers": ["stack b12 b2"]}, {"facts": ["Atom ontable(b2)"], "disjunctive": "False", "first_achievers": ["put-down b2"]}, {"facts": ["Atom ontable(b3)"], "disjunctive": "False", "first_achievers": ["put-down b3"]}, {"facts": ["Atom ontable(b4)"], "disjunctive": "False", "first_achievers": ["put-down b4"]}, {"facts": ["Atom on(b5, b4)"], "disjunctive": "False", "first_achievers": ["stack b5 b4"]}, {"facts": ["Atom on(b6, b3)"], "disjunctive": "False", "first_achievers": ["stack b6 b3"]}, {"facts": ["Atom on(b7, b8)"], "disjunctive": "False", "first_achievers": ["stack b7 b8"]}, {"facts": ["Atom ontable(b8)"], "disjunctive": "False", "first_achievers": ["put-down b8"]}, {"facts": ["Atom ontable(b9)"], "disjunctive": "False", "first_achievers": ["put-down b9"]}, {"facts": ["Atom clear(b1)"], "disjunctive": "False", "first_achievers": ["put-down b1", "stack b1 b10", "stack b1 b11", "stack b1 b12", "stack b1 b2", "stack b1 b3", "stack b1 b4", "stack b1 b5", "stack b1 b6", "stack b1 b7", "stack b1 b8", "stack b1 b9", "unstack b10 b1", "unstack b11 b1", "unstack b12 b1", "unstack b2 b1", "unstack b3 b1", "unstack b4 b1", "unstack b5 b1", "unstack b6 b1", "unstack b7 b1", "unstack b8 b1", "unstack b9 b1"]}, {"facts": ["NegatedAtom clear(b1)"], "disjunctive": "False", "first_achievers": ["stack b10 b1", "stack b12 b1", "stack b2 b1", "stack b3 b1", "stack b4 b1", "stack b5 b1", "stack b7 b1", "stack b8 b1", "stack b9 b1", "unstack b1 b11"]}, {"facts": ["Atom clear(b10)"], "disjunctive": "False", "first_achievers": ["put-down b10", "stack b10 b1", "stack b10 b11", "stack b10 b12", "stack b10 b2", "stack b10 b3", "stack b10 b4", "stack b10 b5", "stack b10 b6", "stack b10 b7", "stack b10 b8", "stack b10 b9", "unstack b1 b10", "unstack b11 b10", "unstack b12 b10", "unstack b2 b10", "unstack b3 b10", "unstack b4 b10", "unstack b5 b10", "unstack b6 b10", "unstack b7 b10", "unstack b8 b10", "unstack b9 b10"]}, {"facts": ["NegatedAtom clear(b10)"], "disjunctive": "False", "first_achievers": ["stack b1 b10", "stack b11 b10", "stack b12 b10", "stack b4 b10", "stack b5 b10", "stack b6 b10", "stack b7 b10", "stack b8 b10", "stack b9 b10", "unstack b10 b3"]}, {"facts": ["Atom clear(b11)"], "disjunctive": "False", "first_achievers": ["unstack b1 b11"]}, {"facts": ["NegatedAtom clear(b11)"], "disjunctive": "False", "first_achievers": ["stack b1 b11", "stack b10 b11", "stack b12 b11", "stack b2 b11", "stack b3 b11", "stack b4 b11", "stack b5 b11", "stack b7 b11", "stack b8 b11", "stack b9 b11", "unstack b11 b6"]}, {"facts": ["Atom clear(b12)"], "disjunctive": "False", "first_achievers": ["unstack b9 b12"]}, {"facts": ["NegatedAtom clear(b12)"], "disjunctive": "False", "first_achievers": ["stack b1 b12", "stack b10 b12", "stack b11 b12", "stack b2 b12", "stack b3 b12", "stack b4 b12", "stack b5 b12", "stack b6 b12", "stack b7 b12", "stack b9 b12", "unstack b12 b8"]}, {"facts": ["Atom clear(b2)"], "disjunctive": "False", "first_achievers": ["unstack b3 b2"]}, {"facts": ["NegatedAtom clear(b2)"], "disjunctive": "False", "first_achievers": ["pick-up b2", "stack b1 b2", "stack b10 b2", "stack b11 b2", "stack b12 b2", "stack b3 b2", "stack b4 b2", "stack b5 b2", "stack b6 b2", "stack b7 b2", "stack b8 b2", "stack b9 b2"]}, {"facts": ["Atom clear(b3)"], "disjunctive": "False", "first_achievers": ["unstack b10 b3"]}, {"facts": ["NegatedAtom clear(b3)"], "disjunctive": "False", "first_achievers": ["stack b1 b3", "stack b10 b3", "stack b11 b3", "stack b12 b3", "stack b4 b3", "stack b5 b3", "stack b6 b3", "stack b7 b3", "stack b8 b3", "stack b9 b3", "unstack b3 b2"]}, {"facts": ["Atom clear(b4)"], "disjunctive": "False", "first_achievers": ["put-down b4", "stack b4 b1", "stack b4 b10", "stack b4 b11", "stack b4 b12", "stack b4 b2", "stack b4 b3", "stack b4 b5", "stack b4 b6", "stack b4 b7", "stack b4 b8", "stack b4 b9", "unstack b1 b4", "unstack b10 b4", "unstack b11 b4", "unstack b12 b4", "unstack b2 b4", "unstack b3 b4", "unstack b5 b4", "unstack b6 b4", "unstack b7 b4", "unstack b8 b4", "unstack b9 b4"]}, {"facts": ["NegatedAtom clear(b4)"], "disjunctive": "False", "first_achievers": ["stack b1 b4", "stack b10 b4", "stack b11 b4", "stack b12 b4", "stack b2 b4", "stack b3 b4", "stack b6 b4", "stack b8 b4", "stack b9 b4", "unstack b4 b5"]}, {"facts": ["Atom clear(b5)"], "disjunctive": "False", "first_achievers": ["unstack b4 b5"]}, {"facts": ["NegatedAtom clear(b5)"], "disjunctive": "False", "first_achievers": ["stack b1 b5", "stack b10 b5", "stack b11 b5", "stack b12 b5", "stack b2 b5", "stack b3 b5", "stack b4 b5", "stack b6 b5", "stack b8 b5", "stack b9 b5", "unstack b5 b7"]}, {"facts": ["Atom clear(b6)"], "disjunctive": "False", "first_achievers": ["unstack b11 b6"]}, {"facts": ["NegatedAtom clear(b6)"], "disjunctive": "False", "first_achievers": ["pick-up b6", "stack b1 b6", "stack b10 b6", "stack b11 b6", "stack b12 b6", "stack b2 b6", "stack b3 b6", "stack b4 b6", "stack b5 b6", "stack b7 b6", "stack b8 b6", "stack b9 b6"]}, {"facts": ["Atom clear(b7)"], "disjunctive": "False", "first_achievers": ["unstack b5 b7"]}, {"facts": ["NegatedAtom clear(b7)"], "disjunctive": "False", "first_achievers": ["pick-up b7", "stack b1 b7", "stack b10 b7", "stack b11 b7", "stack b12 b7", "stack b2 b7", "stack b3 b7", "stack b4 b7", "stack b5 b7", "stack b6 b7", "stack b8 b7", "stack b9 b7"]}, {"facts": ["Atom clear(b8)"], "disjunctive": "False", "first_achievers": ["unstack b12 b8"]}, {"facts": ["NegatedAtom clear(b8)"], "disjunctive": "False", "first_achievers": ["pick-up b8", "stack b1 b8", "stack b10 b8", "stack b11 b8", "stack b12 b8", "stack b2 b8", "stack b3 b8", "stack b4 b8", "stack b5 b8", "stack b6 b8", "stack b7 b8", "stack b9 b8"]}, {"facts": ["Atom clear(b9)"], "disjunctive": "False", "first_achievers": ["put-down b9", "stack b9 b1", "stack b9 b10", "stack b9 b11", "stack b9 b12", "stack b9 b2", "stack b9 b3", "stack b9 b4", "stack b9 b5", "stack b9 b6", "stack b9 b7", "stack b9 b8", "unstack b1 b9", "unstack b10 b9", "unstack b11 b9", "unstack b12 b9", "unstack b2 b9", "unstack b3 b9", "unstack b4 b9", "unstack b5 b9", "unstack b6 b9", "unstack b7 b9", "unstack b8 b9"]}, {"facts": ["NegatedAtom clear(b9)"], "disjunctive": "False", "first_achievers": ["stack b1 b9", "stack b10 b9", "stack b11 b9", "stack b2 b9", "stack b3 b9", "stack b4 b9", "stack b5 b9", "stack b6 b9", "stack b7 b9", "unstack b9 b12"]}, {"facts": ["Atom handempty()"], "disjunctive": "False", "first_achievers": ["put-down b1", "put-down b10", "put-down b11", "put-down b12", "put-down b2", "put-down b3", "put-down b4", "put-down b5", "put-down b6", "put-down b7", "put-down b8", "put-down b9", "stack b1 b10", "stack b1 b11", "stack b1 b12", "stack b1 b2", "stack b1 b3", "stack b1 b4", "stack b1 b5", "stack b1 b6", "stack b1 b7", "stack b1 b8", "stack b1 b9", "stack b10 b1", "stack b10 b11", "stack b10 b12", "stack b10 b2", "stack b10 b3", "stack b10 b4", "stack b10 b5", "stack b10 b6", "stack b10 b7", "stack b10 b8", "stack b10 b9", "stack b11 b1", "stack b11 b10", "stack b11 b12", "stack b11 b2", "stack b11 b3", "stack b11 b4", "stack b11 b5", "stack b11 b6", "stack b11 b7", "stack b11 b8", "stack b11 b9", "stack b12 b1", "stack b12 b10", "stack b12 b11", "stack b12 b2", "stack b12 b3", "stack b12 b4", "stack b12 b5", "stack b12 b6", "stack b12 b7", "stack b12 b8", "stack b12 b9", "stack b2 b1", "stack b2 b10", "stack b2 b11", "stack b2 b12", "stack b2 b3", "stack b2 b4", "stack b2 b5", "stack b2 b6", "stack b2 b7", "stack b2 b8", "stack b2 b9", "stack b3 b1", "stack b3 b10", "stack b3 b11", "stack b3 b12", "stack b3 b2", "stack b3 b4", "stack b3 b5", "stack b3 b6", "stack b3 b7", "stack b3 b8", "stack b3 b9", "stack b4 b1", "stack b4 b10", "stack b4 b11", "stack b4 b12", "stack b4 b2", "stack b4 b3", "stack b4 b5", "stack b4 b6", "stack b4 b7", "stack b4 b8", "stack b4 b9", "stack b5 b1", "stack b5 b10", "stack b5 b11", "stack b5 b12", "stack b5 b2", "stack b5 b3", "stack b5 b4", "stack b5 b6", "stack b5 b7", "stack b5 b8", "stack b5 b9", "stack b6 b1", "stack b6 b10", "stack b6 b11", "stack b6 b12", "stack b6 b2", "stack b6 b3", "stack b6 b4", "stack b6 b5", "stack b6 b7", "stack b6 b8", "stack b6 b9", "stack b7 b1", "stack b7 b10", "stack b7 b11", "stack b7 b12", "stack b7 b2", "stack b7 b3", "stack b7 b4", "stack b7 b5", "stack b7 b6", "stack b7 b8", "stack b7 b9", "stack b8 b1", "stack b8 b10", "stack b8 b11", "stack b8 b12", "stack b8 b2", "stack b8 b3", "stack b8 b4", "stack b8 b5", "stack b8 b6", "stack b8 b7", "stack b8 b9", "stack b9 b1", "stack b9 b10", "stack b9 b11", "stack b9 b12", "stack b9 b2", "stack b9 b3", "stack b9 b4", "stack b9 b5", "stack b9 b6", "stack b9 b7", "stack b9 b8"]}, {"facts": ["NegatedAtom handempty()"], "disjunctive": "False", "first_achievers": ["unstack b1 b11", "unstack b10 b3", "unstack b4 b5", "unstack b9 b12"]}, {"facts": ["Atom holding(b1)"], "disjunctive": "False", "first_achievers": ["unstack b1 b11"]}, {"facts": ["Atom on(b1, b11)"], "disjunctive": "False", "first_achievers": ["stack b1 b11"]}, {"facts": ["Atom holding(b10)"], "disjunctive": "False", "first_achievers": ["unstack b10 b3"]}, {"facts": ["Atom on(b10, b3)"], "disjunctive": "False", "first_achievers": ["stack b10 b3"]}, {"facts": ["Atom holding(b11)"], "disjunctive": "False", "first_achievers": ["unstack b11 b6"]}, {"facts": ["Atom on(b11, b6)"], "disjunctive": "False", "first_achievers": ["stack b11 b6"]}, {"facts": ["Atom holding(b12)"], "disjunctive": "False", "first_achievers": ["unstack b12 b8"]}, {"facts": ["Atom on(b12, b8)"], "disjunctive": "False", "first_achievers": ["stack b12 b8"]}, {"facts": ["Atom holding(b3)"], "disjunctive": "False", "first_achievers": ["unstack b3 b2"]}, {"facts": ["Atom on(b3, b2)"], "disjunctive": "False", "first_achievers": ["stack b3 b2"]}, {"facts": ["Atom holding(b4)"], "disjunctive": "False", "first_achievers": ["unstack b4 b5"]}, {"facts": ["Atom on(b4, b5)"], "disjunctive": "False", "first_achievers": ["stack b4 b5"]}, {"facts": ["Atom holding(b5)"], "disjunctive": "False", "first_achievers": ["unstack b5 b7"]}, {"facts": ["Atom on(b5, b7)"], "disjunctive": "False", "first_achievers": ["stack b5 b7"]}, {"facts": ["Atom holding(b6)"], "disjunctive": "False", "first_achievers": ["pick-up b6"]}, {"facts": ["Atom ontable(b6)"], "disjunctive": "False", "first_achievers": ["put-down b6"]}, {"facts": ["Atom holding(b7)"], "disjunctive": "False", "first_achievers": ["pick-up b7"]}, {"facts": ["Atom ontable(b7)"], "disjunctive": "False", "first_achievers": ["put-down b7"]}, {"facts": ["Atom holding(b9)"], "disjunctive": "False", "first_achievers": ["unstack b9 b12"]}, {"facts": ["Atom on(b9, b12)"], "disjunctive": "False", "first_achievers": ["stack b9 b12"]}]}