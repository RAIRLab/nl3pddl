{
    "domain": "miconic",
    "problem": "problem-1.pddl",
    "problem_num": 1,
    "raw_landmarks": {
        "planner_output": "INFO     planner time limit: None\nINFO     planner memory limit: None\n\nINFO     Running translator.\nINFO     translator stdin: None\nINFO     translator time limit: None\nINFO     translator memory limit: None\nINFO     translator command line string: /home/james/repos/nl2pddl3/.venv/bin/python /home/james/repos/nl2pddl3/.venv/lib/python3.10/site-packages/forbiditerative/builds/release/bin/translate/translate.py /home/james/repos/nl2pddl3/data/domains/miconic/ground.pddl /home/james/repos/nl2pddl3/data/gen_problems/feedback/miconic/problem-1.pddl --sas-file output.sas\nParsing...\nParsing: [0.000s CPU, 0.001s wall-clock]\nNormalizing task... [0.000s CPU, 0.001s wall-clock]\nInstantiating...\nGenerating Datalog program... [0.000s CPU, 0.000s wall-clock]\nNormalizing Datalog program...\nNormalizing Datalog program: [0.000s CPU, 0.001s wall-clock]\nPreparing model... [0.000s CPU, 0.000s wall-clock]\nGenerated 18 rules.\nComputing model... [0.000s CPU, 0.000s wall-clock]\n55 relevant atoms\n27 auxiliary atoms\n82 final queue length\n86 total queue pushes\nCompleting instantiation... [0.000s CPU, 0.000s wall-clock]\nInstantiating: [0.000s CPU, 0.002s wall-clock]\nComputing fact groups...\nFinding invariants...\n6 initial candidates\nFinding invariants: [0.000s CPU, 0.000s wall-clock]\nChecking invariant weight... [0.000s CPU, 0.000s wall-clock]\nInstantiating groups... [0.000s CPU, 0.000s wall-clock]\nCollecting mutex groups... [0.000s CPU, 0.000s wall-clock]\nChoosing groups...\n6 uncovered facts\nChoosing groups: [0.000s CPU, 0.000s wall-clock]\nBuilding translation key... [0.000s CPU, 0.000s wall-clock]\nComputing fact groups: [0.000s CPU, 0.001s wall-clock]\nBuilding STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]\nBuilding dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]\nBuilding mutex information...\nBuilding mutex information: [0.000s CPU, 0.000s wall-clock]\nTranslating task...\nProcessing axioms...\nSimplifying axioms... [0.000s CPU, 0.000s wall-clock]\nTranslator axioms removed by simplifying: 0\nComputing negative axioms... [0.000s CPU, 0.000s wall-clock]\nProcessing axioms: [0.000s CPU, 0.000s wall-clock]\nTranslating task: [0.000s CPU, 0.000s wall-clock]\n3 effect conditions simplified\n0 implied preconditions added\nDetecting unreachable propositions...\n0 operators removed\n0 axioms removed\n1 propositions removed\nDetecting unreachable propositions: [0.000s CPU, 0.000s wall-clock]\nReordering and filtering variables...\n7 of 7 variables necessary.\n0 of 1 mutex groups necessary.\n12 of 12 operators necessary.\n0 of 0 axiom rules necessary.\nReordering and filtering variables: [0.000s CPU, 0.000s wall-clock]\nTranslator variables: 7\nTranslator derived variables: 0\nTranslator facts: 15\nTranslator goal facts: 3\nTranslator mutex groups: 0\nTranslator total mutex groups size: 0\nTranslator operators: 12\nTranslator axioms: 0\nTranslator task size: 67\nTranslator peak memory: 28748 KB\nWriting output... [0.000s CPU, 0.000s wall-clock]\nDone! [0.000s CPU, 0.005s wall-clock]\ntranslate exit code: 0\n\nINFO     Running search (/home/james/repos/nl2pddl3/.venv/lib/python3.10/site-packages/forbiditerative/builds/release/bin).\nINFO     search stdin: output.sas\nINFO     search time limit: None\nINFO     search memory limit: None\nINFO     search command line string: /home/james/repos/nl2pddl3/.venv/lib/python3.10/site-packages/forbiditerative/builds/release/bin/downward --evaluator 'h=lmcount(lm_factory=lm_exhaust(),dump_action_landmarks=true)' --always --search 'lazy_greedy([h,const(infinity())])' --internal-plan-file sas_plan < output.sas\n[t=3.0363e-05s, 11192 KB] reading input...\n[t=0.00022863s, 11328 KB] done reading input!\n[t=0.00124674s, 11584 KB] Initializing landmark count heuristic...\n[t=0.00130984s, 11584 KB] Generating landmark graph...\n[t=0.00133701s, 11584 KB] Initializing Exploration...\n[t=0.00135371s, 11584 KB] Generating landmarks by testing all facts with RPG method\n[t=0.00139926s, 11584 KB] Removed 0 reasonable or obedient reasonable orders\n[t=0.00141051s, 11584 KB] Landmarks generation time: 9.0113e-05s\n[t=0.00142009s, 11584 KB] Discovered 15 landmarks, of which 0 are disjunctive and 0 are conjunctive.\n[t=0.00142841s, 11584 KB] 0 edges\n[t=0.00143619s, 11584 KB] Landmark graph generation time: 0.000134236s\n[t=0.00144474s, 11584 KB] Landmark graph contains 15 landmarks, of which 0 are disjunctive and 0 are conjunctive.\n[t=0.00145325s, 11584 KB] Landmark graph contains 0 orderings.\n[t=0.00146258s, 11584 KB] Dumping landmarks from landmark graph: \n[t=0.00155321s, 11584 KB] Action landmarks end.\n[t=0.00163863s, 11584 KB] Building successor generator...done!\n[t=0.00168931s, 11584 KB] peak memory difference for successor generator creation: 0 KB\n[t=0.00171033s, 11584 KB] time for successor generation creation: 9.111e-06s\n[t=0.00172487s, 11584 KB] Variables: 7\n[t=0.00173632s, 11584 KB] FactPairs: 15\n[t=0.00174531s, 11584 KB] Bytes per state: 4\n[t=0.0018493s, 11716 KB] Conducting lazy best first search, (real) bound = 2147483647\n[t=0.0019226s, 11716 KB] 7 initial landmarks, 3 goal landmarks\n[t=0.00194119s, 11716 KB] Initial heuristic value for lmcount(lm_factory = lm_exhaust, dump_action_landmarks = true): 8\n[t=0.00195095s, 11716 KB] Completely explored state space -- no solution!\n[t=0.00195945s, 11716 KB] Actual search time: 3.0939e-05s\n[t=0.00196846s, 11716 KB] Expanded 0 state(s).\n[t=0.00196846s, 11716 KB] Reopened 0 state(s).\n[t=0.00196846s, 11716 KB] Evaluated 1 state(s).\n[t=0.00196846s, 11716 KB] Evaluations: 1\n[t=0.00196846s, 11716 KB] Generated 0 state(s).\n[t=0.00196846s, 11716 KB] Dead ends: 1 state(s).\n[t=0.00196846s, 11716 KB] Number of registered states: 1\n[t=0.00196846s, 11716 KB] Int hash set load factor: 1/1 = 1\n[t=0.00196846s, 11716 KB] Int hash set resizes: 0\n[t=0.00196846s, 11716 KB] Search time: 0.00011961s\n[t=0.00196846s, 11716 KB] Total time: 0.00196846s\nSearch stopped without finding a solution.\nPeak memory: 11716 KB\nRemove intermediate file output.sas\nsearch exit code: 12\n\nDriver aborting after search\nINFO     Planner time: 0.08s\n",
        "planner_error": "",
        "landmarks": [
            {
                "facts": [
                    "Atom served(p3)"
                ],
                "disjunctive": "False",
                "first_achievers": [
                    "depart f3 p3"
                ]
            },
            {
                "facts": [
                    "Atom served(p2)"
                ],
                "disjunctive": "False",
                "first_achievers": [
                    "depart f1 p2"
                ]
            },
            {
                "facts": [
                    "Atom served(p1)"
                ],
                "disjunctive": "False",
                "first_achievers": [
                    "depart f2 p1"
                ]
            },
            {
                "facts": [
                    "Atom lift-at(f1)"
                ],
                "disjunctive": "False",
                "first_achievers": [
                    "down f2 f1",
                    "down f3 f1"
                ]
            },
            {
                "facts": [
                    "Atom lift-at(f2)"
                ],
                "disjunctive": "False",
                "first_achievers": [
                    "down f3 f2",
                    "up f1 f2"
                ]
            },
            {
                "facts": [
                    "Atom lift-at(f3)"
                ],
                "disjunctive": "False",
                "first_achievers": [
                    "up f1 f3",
                    "up f2 f3"
                ]
            },
            {
                "facts": [
                    "Atom boarded(p3)"
                ],
                "disjunctive": "False",
                "first_achievers": [
                    "board f2 p3"
                ]
            },
            {
                "facts": [
                    "NegatedAtom boarded(p3)"
                ],
                "disjunctive": "False",
                "first_achievers": [
                    "depart f3 p3"
                ]
            },
            {
                "facts": [
                    "NegatedAtom served(p3)"
                ],
                "disjunctive": "False",
                "first_achievers": []
            },
            {
                "facts": [
                    "Atom boarded(p2)"
                ],
                "disjunctive": "False",
                "first_achievers": [
                    "board f2 p2"
                ]
            },
            {
                "facts": [
                    "NegatedAtom boarded(p2)"
                ],
                "disjunctive": "False",
                "first_achievers": [
                    "depart f1 p2"
                ]
            },
            {
                "facts": [
                    "NegatedAtom served(p2)"
                ],
                "disjunctive": "False",
                "first_achievers": []
            },
            {
                "facts": [
                    "Atom boarded(p1)"
                ],
                "disjunctive": "False",
                "first_achievers": [
                    "board f3 p1"
                ]
            },
            {
                "facts": [
                    "NegatedAtom boarded(p1)"
                ],
                "disjunctive": "False",
                "first_achievers": [
                    "depart f2 p1"
                ]
            },
            {
                "facts": [
                    "NegatedAtom served(p1)"
                ],
                "disjunctive": "False",
                "first_achievers": []
            }
        ]
    },
    "landmarks": [
        [
            "depart f3 p3"
        ],
        [
            "depart f2 p1"
        ],
        [
            "board f2 p2"
        ],
        [
            "board f3 p1"
        ],
        [
            "up f1 f3",
            "up f2 f3"
        ],
        [
            "board f2 p3"
        ],
        [
            "up f1 f2",
            "down f3 f2"
        ],
        [
            "down f3 f1",
            "down f2 f1"
        ],
        [],
        [
            "depart f1 p2"
        ]
    ]
}