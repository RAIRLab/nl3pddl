Here's the complete PDDL domain for the grid-visit-all problem:

```pddl
(define (domain grid-visit-all)

    (:requirements :typing :strips)

    (:types place - object)

    (:predicates 
        (connected ?x ?y - place)
        (at-robot ?x - place)
        (visited ?x - place)
    )

    (:action move
        :parameters (?from ?to - place)
        :precondition (and (at-robot ?from) (connected ?from ?to))
        :effect (and 
                    (not (at-robot ?from))
                    (at-robot ?to)
                    (visited ?to)
                )
    )
)
```

**Key components explained:**
1. Added the `(visited ?x - place)` predicate to track which places have been visited
2. Created a `move` action with:
   - Parameters for source and destination places
   - Precondition requiring the robot to be at the source and have a connection
   - Effects that update the robot's position and mark the destination as visited

The corresponding problem file would need to:
1. Define specific place instances in a grid arrangement
2. Initialize `connected` predicates for adjacent cells
3. Set initial robot position with `at-robot`
4. Include a goal condition requiring all places to be visited `(forall (?p - place) (visited ?p))`